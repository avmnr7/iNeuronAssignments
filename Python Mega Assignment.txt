Q1. Why do we call Python as a general purpose and high-level programming language?

   Python is a general purpose language because it is used in various fields like Machine learning,Data Science,Web Development,Data Analysis ,AI and so on.
   It is a high-level language because it's easy for humans to understand and it is obejct oriented approach.
  
Q2. Why is Python called a dynamically typed language?
    Python called a dynamically typed language because of interpreter does type checking only as code runs, and the type of a variable is allowed to change over its lifetime.
    
   
Q3. List some pros and cons of Python programming language?

Pros	
   Highly Scalable
   Flexible and Extensible	
   Extensive Libraries	
   Embeddable	
   Portable
Cons
   Slower than compiled languages
   Security
   Pythonâ€™s Memory Consumption and Garbage Collection
   High memory consumption
   Python is Dynamically Typed

Q4. In what all domains can we use Python?

   Python can use in various domains
   Data analysis and visualizations
   Programming applications
   AI and machine learning
   Financial analysis and fintechs
   Game development
   
Q5. What are variable and how can we declare them?
     In Python, variable is a symbolic name that is a reference or pointer to an object. Once an object is assigned to variable ,we can refer to the object by that name.
     In Python we don't declare variables, we simply assign them.
     
Q6. How can we take an input from the user in Python?

      Using input() function

Q7. What is the default datatype of the value that has been taken as an input using input() function?

     String

Q8. What is type casting?

 Changing one datatype to other data type is casting.

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?

 Using only with input function , No . but using input and split function we can get multiple inputs.
 
 name,age=input("Enter User details of name, age  is: ").split(",",2)
print("User name is :",name)
print("User age is :",age)



Q10. What are keywords?
     Keywords are some predefined and reserved words in python that have special meanings.

Q11. Can we use keywords as a variable? Support your answer with reason.
     No. We cannot use keywords as varaibale.
     Example 
     if=5
   print("The value of if is ",if)
   It throws SyntaxError: invalid syntax  error


Q12. What is indentation? What's the use of indentaion in Python?
Indentation is the leading whitespace (spaces or/and tabs) before any statement in Python. 
The reason why indentation is important in python is that the indentation serves another purpose other than code readability. 
Python treats the statements with the same indentation level (statements with an equal number of whitespaces before them) as a single code block.

Q13. How can we throw some output in Python?
      Using print() function
      
Q14. What are operators in Python?
   Operators are used to perform operations on variables and values. Some of them areArithmetic operators
   Assignment operators
    Comparison operators
   Logical operators
   Identity operators
   Membership operators
  Bitwise operators
  
Q15. What is difference between / and // operators?

     /  for float division
     // for integer divison 


Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```   print("iNeuroniNeuroniNeuroniNeuron")

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.

    number1=int(input("Please enter the number to test whether ever or odd: "))
    if (num1%2==0):
        print("The given number %d is even"%(num1),end="\n")
    else:    
        print("The given number %d is odd"%(num1),end="\n")
        
Q18. What are boolean operator?
     Boolean operators are those that take Boolean inputs and return Boolean results.
     The logical operators and, or and not are also referred to as boolean operators. 
     While and as well as or operator needs two operands, which may evaluate to true or false, not operator needs one operand evaluating to true or false.

Q19. What will the output of the following?

1 or 0
output:  1
0 and 0
Output:0
True and False and True
Output: False
1 or 0 or 0
Output: 1

Q20. What are conditional statements in Python?

if.
if..else.
Nested if.
if-elif statements

Q21. What is use of 'if', 'elif' and 'else' keywords?

In a Python program, the if or elif statements are used to perform this sort of decision-making. It allows for conditional execution of a statement or group of statements 
or group of statements based on the value of an expression. Else statement is  if all the above conditions evalutes to false.


Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".
age=int(input("Please enter the age to check voting right: "))
if (age>=18):
    print("I can vote")
else:    
    print("I can't vote")


Q23. Write a code that displays the sum of all the even numbers from the given list.

numbers = [12, 75, 150, 180, 145, 525, 50]

print("The sum of numbers give in the list is : ",sum(numbers))




Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.

num1=int(input("Please enter the first number: "))
num2=int(input("Please enter the second number: "))
num3=int(input("Please enter the third number: "))
if (num1>num2) and (num1>num3):
    print("The greatest of %d,%d,%d is %d "%(num1,num2,num3,num1))
elif (num2>num3) and (num2>num3):
    print("The greatest of %d,%d,%d is %d "%(num1,num2,num3,num2))
else:
    print("The greatest of %d,%d,%d is %d "%(num1,num2,num3,num3))


Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop

numbers = [12, 75, 150, 180, 145, 525, 50]
for i in numbers:
    if((i%5)==0):
        if(500>i>150 ):
            continue
        if(i>500):
            break
        
        print("The number divisible by 5 is ",i)

Q26. What is a string? How can we declare string in Python?
     String is a word or sententence that contains alpha numerics .It is declared in single or double quotes.
     
Q27. How can we access the string using its index?
      using string[index]
Q28. Write a code to get the desired output of the following
       
string = "Big Data iNeuron"
desired_output = "iNeuron"
          print(string[9:])
Q29. Write a code to get the desired output of the following

string = "Big Data iNeuron"
desired_output = "norueNi"

    i=-1
while(i>-8) :
	print(string[i],end="")
	i=i-1


Q30. Resverse the string given in the above question.

    i=-1
while(i>-len(string)-1) :
	print(string[i],end="")
	i=i-1

Q31. How can you delete entire string at once?
       del string
Q32. What is escape sequence?
       \
Q33. How can you print the below string?
       
'iNeuron's Big Data Course'
  print("\'iNeuron\'s Big Data Course\' ")
Q34. What is a list in Python?
     Lists are one of 4 built-in data types in Python used to store collections of data. Lists are used to store multiple items in a single variable.
   
Q35. How can you create a list in Python?
       Lists are created using square brackets.
Q36. How can we access the elements in a list?
       List items are indexed and you can access them by referring to the index number.
Q37. Write a code to access the word "iNeuron" from the given list.
      lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
       print(lst[4][2])
Q38. Take a list as an input from the user and find the length of the list.
        print(len(lst))
Q39. Add the word "Big" in the 3rd index of the given list.

lst = ["Welcome", "to", "Data", "course"]
            lst.insert(3,"Big")
             print(lst)
Q40. What is a tuple? How is it different from list?
      Tuple is one of 4 built-in data types in Python used to store collections of data.
      Tuple items are ordered, unchangeable, and allow duplicate values.
      List items are ordered, changeable, and allow duplicate values.
Q41. How can you create a tuple in Python?
     Tuples are written with round brackets.
Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.
       Tupleas are immutables so we cannot change the values in the tuple so it is not possible to add , if you want to add then need to change to list (lst) type and again rever back the list to tuple(tuple).
Q43. Can two tuple be appended. If yes, write a code for it. If not, why?
          tuple1 = ("apple", "banana", "cherry")
      tuple2 = ("orange",)
       tuple1 += tuple2
        print(tuple1)  
Q44. Take a tuple as an input and print the count of elements in it.
            tuple1 = ("apple", "banana", "cherry")
        print(len(tuple1))
Q45. What are sets in Python?
     Sets are used to store multiple items in a single variable.
     Set is one of 4 built-in data types in Python used to store collections of data.
    
Q46. How can you create a set?
      Sets are written with curly brackets.
Q47. Create a set and add "iNeuron" in your set.
       thisset = {"data", "training", "support"}

       thisset.add("iNeuron")

        print(thisset)
Q48. Try to add multiple values using add() function.
       TypeError: add() takes exactly one argument (2 given)  
Q49. How is update() different from add()?
        add()	 Adds an element to the set
        update() Update the set with the union of this set and others
Q50. What is clear() in sets?
      clear()	Removes all the elements from the set   
Q51. What is frozen set?
      Frozen set is just an immutable version of a Python set object
Q52. How is frozen set different from set?
      A set is a mutable object while frozenset provides an immutable implementation.
Q53. What is union() in sets? Explain via code.
        union()	Return a set containing the union of sets 
        set1={"Big","Data","DE","DS"}
        set2={"Hadoop","Hive","Spark","Python"}
          print(set1.union(set2))
Q54. What is intersection() in sets? Explain via code.
    Intersection() returns a set that contains the items that exist in both sets.
     set1={"Big","Data","DE","DS","Python"}
     set2={"Hadoop","Hive","Spark","Python"}
     print(set1.intersection(set2))
Q55. What is dictionary in Python?
       A dictionary is a collection which is ordered*, changeable and do not allow duplicates.
Q56. How is dictionary different from all other data structures.
      Dictionary items are presented in key:value pairs, and can be referred to by using the key name but other data structures are not key value pair. 
Q57. How can we delare a dictionary in Python?
   Dictionaries are written with curly brackets, and have keys and values
Q58. What will the output of the following?

var = {}
print(type(var))

output is class 'dict'
         
Q59. How can we add an element in a dictionary?
      thisdict["newkey"] = "value"

Q60. Create a dictionary and access all the values in that dictionary.
          thisdict ={"brand": "Ford","model": "Mustang","year": 1964}
          print(thisdict) 
Q61. Create a nested dictionary and access all the element in the inner dictionary.
         thisdict ={"brand": "Ford","model": "Mustang","year": 1964,"features":{"engine":"R4","fuel":"diesel"}}
        print(thisdict["features"])

Q62. What is the use of get() function?
       get()	Returns the value of the specified key   
Q63. What is the use of items() function?
      items()	Returns a list containing a tuple for each key value pair
Q64. What is the use of pop() function?
       pop()	Removes the element with the specified key
Q65. What is the use of popitems() function?
       popitem()	Removes the last inserted key-value pair
Q66. What is the use of keys() function?
      keys()	Returns a list containing the dictionary's keys
Q67. What is the use of values() function?
       values()	Returns a list of all the values in the dictionary
Q68. What are loops in Python?
        Looping means repeating something over and over until a particular condition is satisfied.
Q69. How many type of loop are there in Python?
         while loop and for loop      
Q70. What is the difference between for and while loops?
       For loop used when the Number of iterations already known.  
       While loop is used when No prior information on the number of iterations.
Q71. What is the use of continue statement?
   With the continue statement we can stop the current iteration of the loop, and continue with the next:
Q72. What is the use of break statement?
  With the break statement we can stop the loop before it has looped through all the items.
Q73. What is the use of pass statement?
     pass statement to avoid getting an error when there is no code available.
Q74. What is the use of range() function?
 The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and ends at a specified number.
Q75. How can you loop over a dictionary?
 You can loop through a dictionary by using a for loop.
  When looping through a dictionary, the return value are the keys of the dictionary, but there are methods to return the values as well.

Coding problems
Q76. Write a Python program to find the factorial of a given number.
     
Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (PRT)/100

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.

Q79. Write a Python program to check if a number is prime or not.

Q80. Write a Python program to check Armstrong Number.

Q81. Write a Python program to find the n-th Fibonacci Number.

Q82. Write a Python program to interchange the first and last element in a list.

Q83. Write a Python program to swap two elements in a list.

Q84. Write a Python program to find N largest element from a list.

Q85. Write a Python program to find cumulative sum of a list.

Q86. Write a Python program to check if a string is palindrome or not.

Q87. Write a Python program to remove i'th element from a string.

Q88. Write a Python program to check if a substring is present in a given string.

Q89. Write a Python program to find words which are greater than given length k.

Q90. Write a Python program to extract unquire dictionary values.

Q91. Write a Python program to merge two dictionary.

Q92. Write a Python program to convert a list of tuples into dictionary.

Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.

Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
Q94. Write a Python program to get all combinations of 2 tuples.

Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
Q95. Write a Python program to sort a list of tuples by second item.

Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
Q96. Write a python program to print below pattern.

* 
* * 
* * * 
* * * * 
* * * * * 
Q97. Write a python program to print below pattern.

    *
   **
  ***
 ****
*****
Q98. Write a python program to print below pattern.

    * 
   * * 
  * * * 
 * * * * 
* * * * * 
Q99. Write a python program to print below pattern.

1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
Q100. Write a python program to print below pattern.

A 
B B 
C C C 
D D D D 
E E E E E 